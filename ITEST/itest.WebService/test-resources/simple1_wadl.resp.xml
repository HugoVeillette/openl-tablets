<application xmlns="http://wadl.dev.java.net/2009/02" xmlns:xs="http://www.w3.org/2001/XMLSchema"
             xmlns:prefix3="http://csr.generated.openl.org" xmlns:prefix2="http://variation.rules.openl.org"
             xmlns:prefix1="http://jaxrs.openl.org">
    <grammars>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
                   xmlns:tns="http://convertor2.result.calculation.rules.openl.org" attributeFormDefault="unqualified"
                   elementFormDefault="qualified"
                   targetNamespace="http://convertor2.result.calculation.rules.openl.org"
                   version="1.0">
            <xs:element name="calculationStep" type="tns:calculationStep"/>
            <xs:element name="codeStep" type="tns:codeStep"/>
            <xs:element name="compoundStep" type="tns:compoundStep"/>
            <xs:element name="simpleStep" type="tns:simpleStep"/>
            <xs:complexType name="compoundStep">
                <xs:complexContent>
                    <xs:extension base="tns:codeStep">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="id" type="xs:string"/>
                            <xs:element maxOccurs="unbounded" minOccurs="0" name="steps" nillable="true"
                                        type="tns:calculationStep"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="codeStep">
                <xs:complexContent>
                    <xs:extension base="tns:calculationStep">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="code" type="xs:string"/>
                            <xs:element minOccurs="0" name="value" type="xs:double"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="calculationStep">
                <xs:sequence>
                    <xs:element minOccurs="0" name="formula" type="xs:double"/>
                    <xs:element minOccurs="0" name="stepName" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="simpleStep">
                <xs:complexContent>
                    <xs:extension base="tns:codeStep">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="text" type="xs:string"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
        </xs:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://csr.generated.openl.org"
                   attributeFormDefault="unqualified" elementFormDefault="unqualified"
                   targetNamespace="http://csr.generated.openl.org"
                   version="1.0">
            <xs:element name="Test" type="tns:Test"/>
            <xs:complexType name="Test">
                <xs:sequence>
                    <xs:element minOccurs="0" name="Value_R10" type="xs:double"/>
                    <xs:element minOccurs="0" name="Value1_R10" type="xs:double"/>
                    <xs:element minOccurs="0" name="Value2_R10" type="xs:string"/>
                    <xs:element minOccurs="0" name="Value_R20" type="xs:double"/>
                    <xs:element minOccurs="0" name="Value1_R20" type="xs:double"/>
                    <xs:element minOccurs="0" name="Value2_R20" type="xs:string"/>
                    <xs:element minOccurs="0" name="Value_R30" type="xs:double"/>
                    <xs:element minOccurs="0" name="Value1_R30" type="xs:double"/>
                    <xs:element minOccurs="0" name="Value2_R30" type="xs:string"/>
                    <xs:element minOccurs="0" name="Value_R40" type="xs:double"/>
                    <xs:element minOccurs="0" name="Value1_R40" type="xs:double"/>
                    <xs:element minOccurs="0" name="Value2_R40" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://variation.rules.openl.org"
                   attributeFormDefault="unqualified" elementFormDefault="qualified"
                   targetNamespace="http://variation.rules.openl.org"
                   version="1.0">
            <xs:element name="argumentReplacementVariation" type="tns:argumentReplacementVariation"/>
            <xs:element name="complexVariation" type="tns:complexVariation"/>
            <xs:element name="deepCloningVariation" type="tns:deepCloningVariation"/>
            <xs:element name="jxPathVariation" type="tns:jxPathVariation"/>
            <xs:element name="noVariation" type="tns:noVariation"/>
            <xs:element name="variation" type="tns:variation"/>
            <xs:element name="variationsPack" type="tns:variationsPack"/>
            <xs:element name="variationsResult" type="tns:variationsResult"/>
            <xs:complexType name="noVariation">
                <xs:complexContent>
                    <xs:extension base="tns:variation">
                        <xs:sequence/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType abstract="true" name="variation">
                <xs:sequence>
                    <xs:element minOccurs="0" name="variationID" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="argumentReplacementVariation">
                <xs:complexContent>
                    <xs:extension base="tns:variation">
                        <xs:sequence>
                            <xs:element name="updatedArgumentIndex" type="xs:int"/>
                            <xs:element minOccurs="0" name="valueToSet" type="xs:anyType"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="complexVariation">
                <xs:complexContent>
                    <xs:extension base="tns:variation">
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" minOccurs="0" name="variations" nillable="true"
                                        type="tns:variation"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="jxPathVariation">
                <xs:complexContent>
                    <xs:extension base="tns:variation">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="path" type="xs:string"/>
                            <xs:element name="updatedArgumentIndex" type="xs:int"/>
                            <xs:element minOccurs="0" name="valueToSet" type="xs:anyType"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="deepCloningVariation">
                <xs:complexContent>
                    <xs:extension base="tns:variation">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="delegatedVariation" type="tns:variation"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType final="extension restriction" name="variationsPack">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="variations" nillable="true"
                                type="tns:variation"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="variationsResult">
                <xs:sequence>
                    <xs:element minOccurs="0" name="data" type="xs:base64Binary"/>
                    <xs:element name="variationFailures">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element maxOccurs="unbounded" minOccurs="0" name="entry">
                                    <xs:complexType>
                                        <xs:sequence>
                                            <xs:element minOccurs="0" name="key" type="xs:string"/>
                                            <xs:element minOccurs="0" name="value" type="xs:string"/>
                                        </xs:sequence>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="variationResults">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element maxOccurs="unbounded" minOccurs="0" name="entry">
                                    <xs:complexType>
                                        <xs:sequence>
                                            <xs:element minOccurs="0" name="key" type="xs:string"/>
                                            <xs:element minOccurs="0" name="value" type="xs:anyType"/>
                                        </xs:sequence>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://variation.rules.openl.org"
                   attributeFormDefault="unqualified" elementFormDefault="unqualified"
                   targetNamespace="http://variation.rules.openl.org"
                   version="1.0">
            <xs:complexType name="error">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://variation.rules.openl.org"
                   xmlns:tns="http://jaxrs.openl.org" attributeFormDefault="unqualified"
                   elementFormDefault="unqualified" targetNamespace="http://jaxrs.openl.org"
                   version="1.0">
            <xs:import namespace="http://variation.rules.openl.org"/>
            <xs:element name="HelloRequest" type="tns:HelloRequest"/>
            <xs:element name="HelloRequest1" type="tns:HelloRequest1"/>
            <xs:element name="TestRequest" type="tns:TestRequest"/>
            <xs:element name="TestRequest1" type="tns:TestRequest1"/>
            <xs:complexType name="HelloRequest1">
                <xs:sequence>
                    <xs:element minOccurs="0" name="runtimeContext" type="xs:anyType"/>
                    <xs:element minOccurs="0" name="hour" type="xs:int"/>
                    <xs:element minOccurs="0" name="variationPack" type="ns1:variationsPack"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TestRequest1">
                <xs:sequence>
                    <xs:element minOccurs="0" name="runtimeContext" type="xs:anyType"/>
                    <xs:element minOccurs="0" name="hour" type="xs:int"/>
                    <xs:element minOccurs="0" name="variationPack" type="ns1:variationsPack"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TestRequest">
                <xs:sequence>
                    <xs:element minOccurs="0" name="runtimeContext" type="xs:anyType"/>
                    <xs:element minOccurs="0" name="hour" type="xs:int"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="HelloRequest">
                <xs:sequence>
                    <xs:element minOccurs="0" name="runtimeContext" type="xs:anyType"/>
                    <xs:element minOccurs="0" name="hour" type="xs:int"/>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
    </grammars>
    <resources base="http://localhost:#####/REST/deployment1/simple1">
        <resource path="/">
            <resource path="Hello">
                <method name="POST">
                    <request>
                        <representation mediaType="application/json" element="prefix1:HelloRequest"/>
                    </request>
                    <response>
                        <representation mediaType="text/plain"/>
                    </response>
                </method>
            </resource>
            <resource path="Hello1">
                <method name="POST">
                    <request>
                        <representation mediaType="application/json" element="prefix1:HelloRequest1"/>
                    </request>
                    <response>
                        <representation mediaType="application/json" element="prefix2:variationsResult"/>
                    </response>
                </method>
            </resource>
            <resource path="test">
                <method name="POST">
                    <request>
                        <representation mediaType="application/json" element="prefix1:TestRequest"/>
                    </request>
                    <response>
                        <representation mediaType="application/json" element="prefix3:Test"/>
                    </response>
                </method>
            </resource>
            <resource path="test1">
                <method name="POST">
                    <request>
                        <representation mediaType="application/json" element="prefix1:TestRequest1"/>
                    </request>
                    <response>
                        <representation mediaType="application/json" element="prefix3:Test"/>
                    </response>
                </method>
            </resource>
        </resource>
        <resource path="/swagger.{type:json|yaml}">
            <param name="type" style="template" type="xs:string"/>
            <method name="GET">
                <request></request>
                <response>
                    <representation mediaType="application/json"/>
                    <representation mediaType="application/yaml"/>
                </response>
            </method>
        </resource>
    </resources>
</application>
