{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "upcase"
  },
  "basePath": "/upcs",
  "paths": {
    "/mixes": {
      "post": {
        "summary": "Mixes mixes(Mixes)",
        "description": "Rules method: org.openl.generated.beans.Mixes mixes(org.openl.generated.beans.Mixes m)",
        "operationId": "mixes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Mixes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Mixes"
            }
          }
        }
      }
    },
    "/eDGECase": {
      "post": {
        "summary": "boolean eDGECase(String, double)",
        "description": "Rules method: boolean eDGECase(java.lang.String sTring, double NUMBer)",
        "operationId": "eDGECase",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EDGECaseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/mixes2": {
      "post": {
        "summary": "Mixes[] mixes2(Mixes, Mixes)",
        "description": "Rules method: org.openl.generated.beans.Mixes[] mixes2(org.openl.generated.beans.Mixes m1, org.openl.generated.beans.Mixes m2)",
        "operationId": "mixes2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Mixes2Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Mixes"
              }
            }
          }
        }
      }
    },
    "/overload4": {
      "post": {
        "summary": "boolean overload(Integer, String)",
        "description": "Rules method: boolean overload(java.lang.Integer I, java.lang.String J)",
        "operationId": "overload_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OverloadRequest4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/overload": {
      "get": {
        "summary": "boolean overload()",
        "description": "Rules method: boolean overload()",
        "operationId": "overload",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/overload2/{I}": {
      "get": {
        "summary": "boolean overload(int)",
        "description": "Rules method: boolean overload(int I)",
        "operationId": "overload_2",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "name": "I",
            "in": "path",
            "required": true,
            "type": "integer",
            "pattern": ".*",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/overload3": {
      "post": {
        "summary": "boolean overload(int, String)",
        "description": "Rules method: boolean overload(int i, java.lang.String J)",
        "operationId": "overload_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OverloadRequest3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/overload1": {
      "post": {
        "summary": "boolean overload(Bean)",
        "description": "Rules method: boolean overload(Bean b)",
        "operationId": "overload_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Bean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/lowCase": {
      "post": {
        "summary": "boolean lowCase(Double, String)",
        "description": "Rules method: boolean lowCase(java.lang.Double number, java.lang.String string)",
        "operationId": "lowCase",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LowCaseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/MixedCase": {
      "post": {
        "summary": "boolean MixedCase(Double, String)",
        "description": "Rules method: boolean MixedCase(java.lang.Double numBer, java.lang.String String)",
        "operationId": "MixedCase",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MixedCaseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/UPCase": {
      "post": {
        "summary": "boolean UPCase(String, double)",
        "description": "Rules method: boolean UPCase(java.lang.String STRING, double NUMBER)",
        "operationId": "UPCase",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UPCaseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Mixes": {
      "type": "object",
      "properties": {
        "a": {
          "type": "string"
        },
        "B": {
          "type": "integer",
          "format": "int32",
          "default": 10
        },
        "aB": {
          "type": "number",
          "format": "double"
        },
        "Ba": {
          "type": "string",
          "format": "date-time"
        },
        "BB": {
          "type": "boolean"
        },
        "aa": {
          "type": "number"
        }
      },
      "xml": {
        "name": "Mixes",
        "namespace": "http://beans.generated.openl.org"
      }
    },
    "EDGECaseRequest": {
      "type": "object",
      "properties": {
        "sTring": {
          "type": "string"
        },
        "NUMBer": {
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "EDGECaseRequest",
        "namespace": "http://jaxrs.openl.org"
      }
    },
    "Mixes2Request": {
      "type": "object",
      "properties": {
        "m1": {
          "$ref": "#/definitions/Mixes"
        },
        "m2": {
          "$ref": "#/definitions/Mixes"
        }
      },
      "xml": {
        "name": "Mixes2Request",
        "namespace": "http://jaxrs.openl.org"
      }
    },
    "OverloadRequest4": {
      "type": "object",
      "properties": {
        "I": {
          "type": "integer",
          "format": "int32"
        },
        "J": {
          "type": "string"
        }
      },
      "xml": {
        "name": "OverloadRequest4",
        "namespace": "http://jaxrs.openl.org"
      }
    },
    "OverloadRequest3": {
      "type": "object",
      "properties": {
        "i": {
          "type": "integer",
          "format": "int32"
        },
        "J": {
          "type": "string"
        }
      },
      "xml": {
        "name": "OverloadRequest3",
        "namespace": "http://jaxrs.openl.org"
      }
    },
    "Bean": {
      "type": "object",
      "required": [
        "I"
      ],
      "properties": {
        "beanBName": {
          "$ref": "#/definitions/BeanB"
        },
        "I": {
          "type": "integer",
          "format": "int32",
          "default": 17
        }
      }
    },
    "BeanB": {
      "type": "object",
      "properties": {
        "In": {
          "type": "integer",
          "format": "int32"
        },
        "STR": {
          "type": "string"
        }
      }
    },
    "LowCaseRequest": {
      "type": "object",
      "properties": {
        "number": {
          "type": "number",
          "format": "double"
        },
        "string": {
          "type": "string"
        }
      },
      "xml": {
        "name": "LowCaseRequest",
        "namespace": "http://jaxrs.openl.org"
      }
    },
    "MixedCaseRequest": {
      "type": "object",
      "properties": {
        "numBer": {
          "type": "number",
          "format": "double"
        },
        "String": {
          "type": "string"
        }
      },
      "xml": {
        "name": "MixedCaseRequest",
        "namespace": "http://jaxrs.openl.org"
      }
    },
    "UPCaseRequest": {
      "type": "object",
      "properties": {
        "STRING": {
          "type": "string"
        },
        "NUMBER": {
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "UPCaseRequest",
        "namespace": "http://jaxrs.openl.org"
      }
    }
  }
}
