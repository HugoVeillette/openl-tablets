<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
          http://www.springframework.org/schema/util
          http://www.springframework.org/schema/util/spring-util.xsd">

    <import resource="common-authentication.xml"/>
    <import resource="authorization.xml"/>
    <import resource="db-services.xml" />

    <!-- ============================ Define needed beans for dependencies ====================================== -->
    <bean id="rememberMeServices" class="org.springframework.security.web.authentication.NullRememberMeServices"/>

    <util:list id="authenticationProviders">
        <!-- First try to authenticate using internal users DB, then using AD-->
        <ref bean="daoAuthenticationProvider" />
        <ref bean="authenticationProviderWrapper" />
    </util:list>

    <util:list id="logoutHandlers">
        <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
    </util:list>

    <!-- ================================= Define properties ======================================= -->
    <bean id="adConfigManagerFactory" class="org.openl.config.ConfigurationManagerFactory">
        <constructor-arg name="useSystemProperties" value="true"/>
        <constructor-arg name="defaultPropertiesLocation"
                         value="#{systemProperties['webapp.root']}/WEB-INF/conf/security-ad.properties"/>
        <constructor-arg name="propertiesFolder" value="#{systemProperties['webstudio.home']}/system-settings/"/>
    </bean>
    <bean id="adConfigManager" factory-bean="adConfigManagerFactory" factory-method="getConfigurationManager"
          autowire-candidate="false">
        <constructor-arg name="propertiesName" value="security-ad.properties"/>
    </bean>
    <bean id="adConfig" class="java.util.HashMap">
        <constructor-arg value="#{adConfigManager.properties}" />
    </bean>

    <!-- ================================= Authentication ======================================= -->
    <bean id="adAuthenticationProvider" class="org.springframework.security.ldap.authentication.ad.ActiveDirectoryLdapAuthenticationProvider">
        <constructor-arg name="domain" value="#{adConfig['security.ad.domain']}"/>
        <constructor-arg name="url" value="#{adConfig['security.ad.url']}"/>
        <property name="authoritiesMapper" ref="authoritiesMapper"/>
        <property name="userDetailsContextMapper" ref="userDetailsContextMapper"/>
    </bean>

    <bean id="authoritiesMapper" class="org.openl.rules.webstudio.security.ActiveDirectoryAuthoritiesMapper">
        <constructor-arg ref="groupDao"/>
    </bean>

    <bean id="userDetailsContextMapper" class="org.openl.rules.webstudio.security.LdapToOpenLUserDetailsMapper">
        <constructor-arg name="delegate">
            <bean class="org.springframework.security.ldap.userdetails.LdapUserDetailsMapper"/>
        </constructor-arg>
    </bean>

    <bean id="authenticationProviderWrapper" class="org.openl.rules.webstudio.security.OpenLAuthenticationProviderWrapper">
        <constructor-arg name="delegate" ref="adAuthenticationProvider"/>
        <constructor-arg name="userManagementService" ref="userManagementService"/>
        <constructor-arg name="groupManagementService" ref="groupManagementService"/>
        <constructor-arg name="origin">
            <util:constant static-field="org.openl.rules.webstudio.web.util.Constants.USER_ORIGIN_ACTIVE_DIRECTORY"/>
        </constructor-arg>
        <property name="defaultGroup" value="#{adConfig['security.ad.default-group']}"/>
        <property name="groupsAreManagedInStudio" value="#{adConfig['security.ad.groups-are-managed-in-studio']}"/>
    </bean>

    <!-- ========================== Internal users authentication =============================== -->
    <bean id="daoAuthenticationProvider" class="org.openl.rules.security.standalone.authentication.RehashingDaoAuthenticationProvider">
        <constructor-arg ref="passwordEncoder"/>
        <constructor-arg ref="openlUserDao"/>
        <property name="userDetailsService" ref="userDetailsService" />
        <property name="hideUserNotFoundExceptions" value="false" />
    </bean>

    <bean id="passwordEncoder" class="org.openl.rules.security.standalone.authentication.OpenLPasswordEncoder" >
        <constructor-arg value="#{systemProperties['webstudio.bcrypt.strength']}"/>
    </bean>

    <bean id="userDetailsService" class="org.openl.rules.security.standalone.service.UserInfoUserDetailsServiceImpl">
        <property name="userDao" ref="openlUserDao" />
    </bean>

</beans>