<ui:composition
        xmlns:f="http://java.sun.com/jsf/core"
        xmlns:h="http://java.sun.com/jsf/html"
        xmlns:a4j="http://richfaces.org/a4j"
        xmlns:rich="http://richfaces.org/rich"
        xmlns:ui="http://java.sun.com/jsf/facelets">

    <style>
        #copyProjectForm input[type="text"],
        #copyProjectForm textarea {
            min-width: 210px;
        }

        #copyProjectForm input[type="text"].rf-insp-inp {
            min-width: 203px;
        }
    </style>

    <rich:popupPanel id="modalCopyProject" width="400" autosized="true">
        <f:facet name="header">
            <h:outputText value="Copy project"/>
        </f:facet>

        <f:facet name="controls">
            <h:graphicImage value="/images/close.gif" class="close" alt="Close" title="Close"
                            onclick="RichFaces.$('modalCopyProject').hide();"/>
        </f:facet>

        <h:form id="copyProjectForm">
            <h:panelGroup id="modalCopyProjectData">
                <h:panelGrid columns="2" styleClass="formfields" cellspacing="1" columnClasses="label,">
                    <h:outputText value="Project Name:"/>
                    <h:outputText id="currentProjectName" value="#{copyBean.currentProjectName}"/>
                </h:panelGrid>
                <h:panelGrid id="cloneProject" columns="2" styleClass="formfields" cellspacing="1" columnClasses="label,"
                             rendered="#{copyBean.supportsBranches}">
                    <h:outputLabel value="Clone project:" for="cloneCheckbox"/>
                    <h:selectBooleanCheckbox id="cloneCheckbox" value="#{copyBean.cloneProject}"
                                             onclick="updateCloneProjectState()">
                    </h:selectBooleanCheckbox>
                    <h:outputLabel for="newBranchName" styleClass="required" value="New Branch Name:"/>
                    <h:inputText id="newBranchName" value="#{copyBean.newBranchName}"
                                 validator="#{copyBean.newBranchNameValidator}"/>
                    <h:outputText value=""/>
                    <h:message id="newBranchNameMessage" for="newBranchName" styleClass="error"/>
                </h:panelGrid>
                <h:panelGrid id="newProject" columns="2" styleClass="formfields" cellspacing="1" columnClasses="label,">
                    <h:outputLabel for="newProjectName" styleClass="required" value="New Project Name:"/>
                    <h:inputText id="newProjectName" maxlength="50" value="#{copyBean.newProjectName}"
                                 validator="#{copyBean.newProjectNameValidator}"/>
                    <h:outputText value=""/>
                    <h:message for="newProjectName" styleClass="error"/>

                    <h:outputText value="Comment:"/>
                    <h:inputTextarea id="comment" value="#{copyBean.comment}" type="text" size="35" readonly="false"
                                     validatorMessage="Length is greater than allowable maximum of '255'">
                        <f:validateLength maximum="255"/>
                    </h:inputTextarea>
                    <h:outputText value=""/>
                    <h:message for="comment" styleClass="error"/>

                    <ui:param name="hasRevisions" value="#{copyBean.maxRevisionsCount > 0}"/>

                    <h:outputText value="Copy old revisions:" rendered="#{hasRevisions}"/>
                    <h:selectBooleanCheckbox id="copyOldRevisions" value="#{copyBean.copyOldRevisions}"
                                             onclick="updateRevisionsCountState()"
                                             rendered="#{hasRevisions}">
                    </h:selectBooleanCheckbox>

                    <h:outputText id="revisionsCountLabel" value="Revisions to copy:"
                                  rendered="#{hasRevisions}"/>
                    <rich:inputNumberSpinner id="revisionsCount" value="#{copyBean.revisionsCount}"
                                             minValue="1" maxValue="#{copyBean.maxRevisionsCount}" cycled="false"
                                             onchange="updateCopyCanBeSlowWarning();"
                                             rendered="#{hasRevisions}"/>
                    <h:outputText value=""/>
                    <h:message for="revisionsCount" styleClass="error"/>

                    <h:outputText value=""/>
                    <h:outputText id="copyCanBeSlowWarning" value="Copying too many revisions can be slow"
                                  styleClass="warning"/>
                </h:panelGrid>

                <h:inputHidden id="hiddenProjectName" value="#{copyBean.currentProjectName}"/>

            </h:panelGroup>

            <footer>
                <a4j:commandButton id="copy" value="Copy" action="#{copyBean.copy}" render="@form" styleClass="button-primary"
                                   oncomplete="updateStates(); if (#{!facesContext.validationFailed}) {RichFaces.$('modalCopyProject').hide(); location.href = location.href;}"/>
                <input type="button" value="Cancel" onclick="RichFaces.$('modalCopyProject').hide();"/>
            </footer>

            <a4j:jsFunction name="renderCopyProjectForm" render="copyProjectForm" oncomplete="showCopyProjectDialog()">
                <a4j:param name="projectName" assignTo="#{copyBean.initProject}"/>
            </a4j:jsFunction>

        </h:form>

    </rich:popupPanel>

    <script>
        //<![CDATA[
        function openCopyProjectDialog(projectName) {
            renderCopyProjectForm(projectName);
        }

        function showCopyProjectDialog() {
            $j('#copyProjectForm\\:hiddenProjectName').val($j('#copyProjectForm\\:currentProjectName').text());
            fixInputNumberSpinner('copyProjectForm:revisionsCount');
            updateStates();
            $j('#copyProjectForm\\:copy').prop('disabled', true);
            var copyListener = function () {
                var shouldClone = false;
                var branchName = '';
                var $cloneCheckbox = $j('#copyProjectForm\\:cloneCheckbox');
                if ($cloneCheckbox.length) {
                    shouldClone = $cloneCheckbox.is(':checked');
                    branchName = $j('#copyProjectForm\\:newBranchName').val().trim();
                }

                var $projectName = $j('#copyProjectForm\\:newProjectName');
                var projectName = $projectName.val().trim();
                var disableCopy = shouldClone && branchName.length === 0 || !shouldClone && projectName.length === 0;
                $j('#copyProjectForm\\:copy').prop('disabled', disableCopy);
            };
            var selector = '#copyProjectForm\\:newProjectName, #copyProjectForm\\:newBranchName, #copyProjectForm\\:cloneCheckbox';
            $j(selector).off().on('change keyup keydown cut paste click', function () {
                // setTimeout() is needed to correctly handle on paste / on cut events
                setTimeout(function () {
                    copyListener();
                }, 0);
            });
            RichFaces.$("modalCopyProject").show();
            focusElement('copyProjectForm:newProjectName');
        }

        function updateStates() {
            updateRevisionsCountState();
            updateCloneProjectState();
        }

        function updateRevisionsCountState() {
            var shouldCopy = $j('#copyProjectForm\\:copyOldRevisions').is(':checked');
            var $revisionsCount = $j('#copyProjectForm\\:revisionsCount');
            var $row = $revisionsCount.closest('tr');
            if (shouldCopy) {
                $row.show();
            } else {
                $row.hide();
            }
            updateCopyCanBeSlowWarning();
        }

        function updateCopyCanBeSlowWarning() {
            var shouldCopy = $j('#copyProjectForm\\:copyOldRevisions').is(':checked');
            var $revisionsCount = $j('#copyProjectForm\\:revisionsCount');
            var $rowWarning = $j('#copyProjectForm\\:copyCanBeSlowWarning').closest('tr');
            if (shouldCopy && $revisionsCount.find('input').val() >= 10) {
                $rowWarning.show();
            } else {
                $rowWarning.hide();
            }
        }

        function updateCloneProjectState() {
            var $cloneCheckbox = $j('#copyProjectForm\\:cloneCheckbox');
            if (!$cloneCheckbox.length) {
                return;
            }

            var shouldClone = $cloneCheckbox.is(':checked');
            var $newBranchName = $j('#copyProjectForm\\:newBranchName').closest('tr');
            var $newBranchNameMessage = $j('#copyProjectForm\\:newBranchNameMessage').closest('tr');
            var $newProject = $j('#copyProjectForm\\:newProject');
            if (shouldClone) {
                $newBranchName.show();
                $newBranchNameMessage.show();
                $newProject.hide();
            } else {
                $newBranchName.hide();
                $newBranchNameMessage.hide();
                $newProject.show();
            }
        }

        //]]>
    </script>
</ui:composition>
