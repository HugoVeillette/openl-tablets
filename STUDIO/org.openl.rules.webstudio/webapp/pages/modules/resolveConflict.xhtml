<ui:composition
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:a4j="http://richfaces.org/a4j"
    xmlns:rich="http://richfaces.org/rich"
    xmlns:ui="http://java.sun.com/jsf/facelets">

  <c:set var="contextPath" value="#{facesContext.externalContext.request.contextPath}" />

  <rich:popupPanel id="modalResolveConflicts" width="580" autosized="true">
    <f:facet name="header">
      <h:outputText value="Resolve conflicts" />
    </f:facet>

    <f:facet name="controls">
      <h:graphicImage value="/images/close.gif" class="close" alt="Close" title="Close" onclick="closeResolveConflictDialog();" />
    </f:facet>

    <div class="scrollable">
      <h:form id="resolveConflictsForm">
        <h:panelGroup id="modalResolveConflictsData">
          <p>
            <h:panelGrid columns="2" styleClass="formfields" cellspacing="1" columnClasses="label,">
              <h:outputText value="Your version:"/>
              <h:outputText value="#{mergeConflictBean.yourCommit}"/>

              <h:outputText value="Their version:"/>
              <h:outputText value="#{mergeConflictBean.theirCommit}"/>

              <h:outputText value="Base version:"/>
              <h:outputText value="#{mergeConflictBean.baseCommit}"/>

              <h:outputText value="Comment:"/>
              <h:inputTextarea value="#{mergeConflictBean.mergeMessage}" type="text" size="35" readonly="false">
                <f:ajax execute="@this"/>
              </h:inputTextarea>
            </h:panelGrid>
            </p>
          <ui:repeat value="#{mergeConflictBean.conflictGroups}" var="conflictGroup">
            <h:outputText value="Conflicts in project '#{conflictGroup.projectName}':"
                          title="Project path in repository: #{conflictGroup.projectPath}" rendered="#{not empty conflictGroup.projectName}"
                          styleClass="label"/>
            <h:outputText value="Conflicts in non-OpenL files" rendered="#{empty conflictGroup.projectName}"/>
            <rich:dataTable value="#{conflictGroup.files}" var="conflict" rowKeyVar="row" styleClass="table">
              <rich:column>
                <f:facet name="header">
                  <h:outputText value="File"/>
                </f:facet>
                <ui:param name="fileName" value="#{mergeConflictBean.getFileName(conflict)}"/>
                <ui:param name="realPath" value="#{mergeConflictBean.getRealPath(conflict)}"/>
                <h:outputText value="#{fileName}" title="#{realPath}"/>
              </rich:column>
              <rich:column style="min-width: 80px">
                <f:facet name="header">
                  <h:outputText value="Compare"/>
                </f:facet>
                <ui:param name="canCompare" value="#{mergeConflictBean.canCompare(conflict, mergeConflictBean.theirCommit)}"/>
                <h:panelGroup rendered="#{canCompare and mergeConflictBean.isExcelFile(conflict)}">
                  <div class="compare-link">
                    <a href="javascript:void(0)" onclick="openCompareRevisionsDialog('#{conflict}')"
                       title="Compare">Compare</a>
                  </div>
                </h:panelGroup>
                <h:panelGroup rendered="#{canCompare and not mergeConflictBean.isExcelFile(conflict)}">
                  <div class="compare-link">
                    <a href="javascript:void(0)" onclick="openCompareTextFilesDialog('#{conflict}')"
                       title="Compare">Compare</a>
                  </div>
                </h:panelGroup>

                <ui:param name="hasYourFile" value="#{mergeConflictBean.hasLocalFile(conflict)}"/>
                <div>
                  <h:panelGroup rendered="#{hasYourFile}">
                    <a href="#{contextPath}/web/file-download/local?name=#{conflict}"
                       title="Download your version">Download Yours</a>
                  </h:panelGroup>
                  <h:panelGroup rendered="#{not hasYourFile}">
                    You deleted the file
                  </h:panelGroup>
                </div>
                <ui:param name="hasTheirFile" value="#{mergeConflictBean.hasRepositoryFile(conflict, mergeConflictBean.theirCommit)}"/>
                <div>
                  <h:panelGroup rendered="#{hasTheirFile}">
                    <a href="#{contextPath}/web/file-download/repository?name=#{conflict}&amp;version=#{mergeConflictBean.theirCommit}"
                       title="Download their version">Download Theirs</a>
                  </h:panelGroup>
                  <h:panelGroup rendered="#{not hasTheirFile}">
                    They deleted the file
                  </h:panelGroup>
                </div>
                <ui:param name="hasBaseFile" value="#{mergeConflictBean.hasRepositoryFile(conflict, mergeConflictBean.baseCommit)}"/>
                <div>
                  <h:panelGroup rendered="#{hasBaseFile}">
                    <a href="#{contextPath}/web/file-download/repository?name=#{conflict}&amp;version=#{mergeConflictBean.baseCommit}"
                       title="Download base version">Download Base</a>
                  </h:panelGroup>
                  <h:panelGroup rendered="#{not hasBaseFile}">
                    Base version is absent
                  </h:panelGroup>
                </div>

              </rich:column>
              <rich:column style="min-width: 160px">
                <f:facet name="header">
                  <h:outputText value="Resolve"/>
                </f:facet>
                <h:selectOneRadio value="#{mergeConflictBean.conflictResolutions[conflict].resolutionType}"
                                  layout="pageDirection" onchange="return uploadConflictResolution('#{conflict}', this)">
                  <f:selectItem itemValue="YOURS" itemLabel="#{hasYourFile ? 'Use yours' : 'Delete it'}"/>
                  <f:selectItem itemValue="THEIRS" itemLabel="#{hasTheirFile ? 'Use theirs' : 'Delete it'}"/>
                  <f:selectItem itemValue="CUSTOM" itemLabel="Upload merged file"/>
                  <f:ajax execute="@this" render=":resolveConflictsForm:modalResolveConflictsButtons"/>
                </h:selectOneRadio>
              </rich:column>
            </rich:dataTable>
          </ui:repeat>

        </h:panelGroup>

        <h:panelGroup id="modalResolveConflictsButtons">
          <footer>
            <a4j:commandButton value="Save" action="#{mergeConflictBean.saveAndResolve}" render="@form"
                               styleClass="button-primary"
                               disabled="#{mergeConflictBean.saveDisabled}"
                               oncomplete="if (#{!facesContext.validationFailed}) {closeResolveConflictDialog();}"/>
            <input class="restore-changed-state" type="button" value="Cancel" onclick="closeResolveConflictDialog();"/>
          </footer>
        </h:panelGroup>

        <a4j:jsFunction name="refreshResolveConflictDialog" action="#{mergeConflictBean.init}" render="@form"
                        oncomplete="showResolveConflictDialog();"/>
        <a4j:jsFunction name="closeResolveConflictDialog" action="#{mergeConflictBean.clearMergeStatus}"
                        oncomplete="afterResolveConflict(); RichFaces.$('modalResolveConflicts').hide();"/>
        <a4j:jsFunction name="setConflictAndUploadConflictResolution" oncomplete="openUploadConflictResolutionDialog();">
          <a4j:param name="conflict" assignTo="#{mergeConflictBean.currentConflictedFile}"/>
        </a4j:jsFunction>
      </h:form>
    </div>

  </rich:popupPanel>

  <script>
      //<![CDATA[
      var afterResolveConflict = function () {};

      function openResolveConflictDialog(afterResolveFunction) {
        afterResolveConflict = afterResolveFunction;
        refreshResolveConflictDialog();
      }

      function showResolveConflictDialog() {
        var $dialog = RichFaces.$("modalResolveConflicts");
        $dialog.show();

        var maxHeight = $j(window).height() * 0.8;
        if ($dialog.height() > maxHeight) {
          $dialog.setSize($dialog.width(), maxHeight);
          $dialog.moveTo($j(window).height() * 0.1, $dialog.getLeft());
        }
      }

      function uploadConflictResolution(conflict, resolutionElement) {
        if (resolutionElement.value === "CUSTOM" && resolutionElement.checked) {
          setConflictAndUploadConflictResolution(conflict);
          return false;
        }
        return true;
      }
      //]]>
  </script>
</ui:composition>
