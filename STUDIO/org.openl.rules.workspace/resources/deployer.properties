# Which class should we instantiate in RepositoryFactory?
#production-repository.factory = org.openl.rules.repository.factories.LocalJackrabbitRepositoryFactory
# Where JCR keeps its files (Local mode only)
#production-repository.uri = ${user.dir}/deployment-repository

# In case of RMI this property defines how to access it
#production-repository.factory = org.openl.rules.repository.factories.RmiJackrabbitRepositoryFactory
#production-repository.uri = //localhost:1099/deployment-repository

# In case of WebDav this property defines how to access it
#production-repository.factory = org.openl.rules.repository.factories.WebDavRepositoryFactory
#production-repository.uri = http://localhost:8080/deployment-repository

# In case of DB via JDBC this property defines how to access it
production-repository.factory = org.openl.rules.repository.factories.JdbcDBRepositoryFactory
production-repository.uri = jdbc:mysql://localhost/deployment-repository

# In case of DB via JNDI this property defines how to access it
#production-repository.factory = org.openl.rules.repository.factories.JndiDBRepositoryFactory
#production-repository.uri = java:comp/env/jdbc/deploymentDB

#Login and password for remote repository
production-repository.login = root
production-repository.password = serV3r10

# Secret key for password code/decode
repository.encode.decode.key =

# Timeouts for initializing and finalizing networking
timeout.networking.initialize = 15000
timeout.networking.finalize = 40000