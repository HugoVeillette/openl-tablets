<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"
       default-lazy-init="true">

    <bean name="repository" class="org.openl.rules.repository.RepositoryInstatiator" factory-method="newRepository"
          destroy-method="close">
        <constructor-arg name="factory" value="${production-repository.factory}"/>
        <constructor-arg name="params">
            <map>
                <entry key="uri" value="${production-repository.uri}"/>
                <entry key="login" value="${production-repository.login}"/>
                <entry key="password">
                    <bean class="org.openl.config.PassCoder" factory-method="decode">
                        <constructor-arg name="strToDecrypt" value="${production-repository.password}"/>
                        <constructor-arg name="privateKey" value="${repository.encode.decode.key}"/>
                    </bean>
                </entry>
            </map>
        </constructor-arg>
    </bean>

    <bean id="rulesDeployerService" class="org.openl.rules.ruleservice.deployer.RulesDeployerService">
        <constructor-arg name="repository" ref="repository"/>
    </bean>

    <!-- Data source storage that provides information about deployments, projects and their properties and version -->
    <bean id="localdatasource" class="org.openl.rules.ruleservice.loader.FileSystemDataSource"
          depends-on="unpackClasspathAutoJarToDirectoryBean">
        <constructor-arg name="loadDeploymentsFromDirectory" value="${ruleservice.datasource.dir}"/>
        <property name="localWorkspaceFileFilter" ref="localWorkspaceFileFilter"/>
        <property name="localWorkspaceFolderFilter" ref="localWorkspaceFolderFilter"/>
        <property name="supportDeployments" value="${ruleservice.datasource.filesystem.supportDeployments}"/>
        <property name="supportVersion" value="${ruleservice.datasource.filesystem.supportVersion}"/>
    </bean>

    <bean id="unpackClasspathAutoJarToDirectoryBean"
          class="org.openl.rules.ruleservice.loader.UnpackClasspathJarToDirectoryBean">
        <property name="destinationDirectory" value="${ruleservice.datasource.dir}"/>
        <property name="unpackAllJarsInOneDeployment"
                  value="#{!${ruleservice.datasource.filesystem.supportDeployments}}"/>
        <property name="supportDeploymentVersion" value="${ruleservice.datasource.filesystem.supportVersion}"/>
        <property name="clearDestinationDirectory" value="${ruleservice.datasource.deploy.clean.datasource}"/>
        <property name="enabled"
                  value="#{${ruleservice.datasource.deploy.classpath.jars} and '${ruleservice.datasource.type}' eq 'local'}"/>
    </bean>

    <!-- Data source storage that provides information about deployments, projects
        and their properties and version -->
    <!-- This implementation based on JCR repository -->
    <bean id="jcrdatasource" class="org.openl.rules.ruleservice.loader.JcrDataSource"
          depends-on="deployClasspathJarsBean">
        <property name="repository" ref="repository"/>
        <property name="includeVersionInDeploymentName" value="${version-in-deployment-name}"/>
    </bean>

    <bean id="deployClasspathJarsBean" class="org.openl.rules.ruleservice.loader.DeployClasspathJarsBean">
        <property name="rulesDeployerService" ref="rulesDeployerService"/>
        <property name="enabled"
                  value="#{${ruleservice.datasource.deploy.classpath.jars} and '${ruleservice.datasource.type}' eq 'jcr'}"/>
    </bean>
</beans>
