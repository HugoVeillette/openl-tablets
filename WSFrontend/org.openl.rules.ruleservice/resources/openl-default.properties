ruleservice.openl.home = ${openl.home}
ruleservice.tmp.dir = ${ruleservice.openl.home}/rules-deploy

ruleservice.isProvideRuntimeContext = true
ruleservice.isSupportVariations = false

ruleservice.datasource.filesystem.supportDeployments = false
ruleservice.datasource.filesystem.supportVersion = false
ruleservice.datasource.groups =
ruleservice.datasource.deploy.classpath.jars = true
ruleservice.datasource.deploy.clean.datasource = true

ruleservice.datasource.dir = ${ruleservice.openl.home}/openl-ruleservice/datasource
ruleservice.datasource.propertiesFolder =

ruleservice.instantiation.strategy.lazy = true
ruleservice.instantiation.strategy.maxthreadsforcompile = 3

#Use production-repository.factory = org.openl.rules.repository.db.JdbcDBRepositoryFactory for database repository
production-repository.factory = org.openl.rules.repository.LocalRepositoryFactory

production-repository.uri = jdbc:h2:mem:repo;DB_CLOSE_DELAY=-1
production-repository.login =
production-repository.password =
# Secret key for password code/decode
repository.encode.decode.key =
# Set "version-in-deployment-name = true" for old implementation
version-in-deployment-name = false

#System Properties
custom.spreadsheet.type = true
dispatching.mode = java
dispatching.validation = false

#Filter deployments by name from datasource. Deployment names should be specified using comma separator
#Patterns can be specified using wildcard letter, for example: rule-*
ruleservice.datasource.deployments=

ruleservice.deployer.enable=false